{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/jake/CodingCentral/egen-gitjobs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jake/CodingCentral/egen-gitjobs/pages/_app.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport '../styles/globals.css';\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"../Components/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"../components/Themes\";\nimport { useState } from 'react';\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState('light'),\n      theme = _useState[0],\n      setTheme = _useState[1];\n\n  var themeToggler = function themeToggler() {\n    theme === 'light' ? setTheme('dark') : setTheme('light');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme === 'light' ? lightTheme : darkTheme,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: themeToggler,\n        children: \"Switch Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/jake/CodingCentral/egen-gitjobs/pages/_app.js"],"names":["ThemeProvider","GlobalStyles","lightTheme","darkTheme","useState","MyApp","Component","pageProps","theme","setTheme","themeToggler"],"mappings":";;;;;;;;;;;AAAA,OAAO,uBAAP;AACA,SAAQA,aAAR,QAA4B,mBAA5B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,sBAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBACbH,QAAQ,CAAC,OAAD,CADK;AAAA,MAChCI,KADgC;AAAA,MACzBC,QADyB;;AAEvC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBF,IAAAA,KAAK,KAAK,OAAV,GAAoBC,QAAQ,CAAC,MAAD,CAA5B,GAAuCA,QAAQ,CAAC,OAAD,CAA/C;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAK,KAAK,OAAV,GAAoBN,UAApB,GAAiCC,SAAvD;AAAA,2BACA;AAAA,8BACA,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAEO,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,SAAD,oBAAeH,SAAf;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAfQF,K;;KAAAA,K;AAiBT,eAAeA,KAAf","sourcesContent":["import '../styles/globals.css'\nimport {ThemeProvider} from \"styled-components\";\nimport { GlobalStyles } from \"../Components/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"../components/Themes\"\nimport { useState } from 'react'\n\nfunction MyApp({ Component, pageProps }) {\n  const [theme, setTheme] = useState('light');\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light')\n  }\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n    <>\n    <GlobalStyles/>\n    <button onClick={themeToggler}>Switch Theme</button>\n    <Component {...pageProps} />\n    </>\n    </ThemeProvider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}